struct Post {
  id: string,
  title: string.max(200),
  content: string,
  author: string,
  created_at: datetime
}

protocol BlogService {
  get_posts() -> [Post]
  create_post(title: string, content: string) -> Post
}

server blog_service implements BlogService {
  state {
    posts: [Post] = [],
    next_id: number = 1
  }
  
  receive get_posts {} -> [Post] {
    return state.posts
  }
  
  receive create_post {title: string, content: string} -> Post {
    set post = Post{
      id: state.next_id.toString(),
      title: title,
      content: content,
      author: "Anonymous",
      created_at: now()
    }
    
    state.posts = [post, ...state.posts]
    state.next_id = state.next_id + 1
    
    return post
  }
}

// Web routes
template "index.html" from get_posts {}
template "api/posts.json" from get_posts {}

config {
  app_name: "simple_blog",
  port: 8080,
  load_balancing: {
    strategy: "round_robin"
  }
} 